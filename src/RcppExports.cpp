// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include "RationalMatrix_types.h"
#include <RcppEigen.h>
#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// det_rcpp
Rcpp::String det_rcpp(CharMatrix M);
RcppExport SEXP _RationalMatrix_det_rcpp(SEXP MSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< CharMatrix >::type M(MSEXP);
    rcpp_result_gen = Rcpp::wrap(det_rcpp(M));
    return rcpp_result_gen;
END_RCPP
}
// image_rcpp
CharMatrix image_rcpp(CharMatrix M);
RcppExport SEXP _RationalMatrix_image_rcpp(SEXP MSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< CharMatrix >::type M(MSEXP);
    rcpp_result_gen = Rcpp::wrap(image_rcpp(M));
    return rcpp_result_gen;
END_RCPP
}
// isInjective_rcpp
bool isInjective_rcpp(CharMatrix M);
RcppExport SEXP _RationalMatrix_isInjective_rcpp(SEXP MSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< CharMatrix >::type M(MSEXP);
    rcpp_result_gen = Rcpp::wrap(isInjective_rcpp(M));
    return rcpp_result_gen;
END_RCPP
}
// isSurjective_rcpp
bool isSurjective_rcpp(CharMatrix M);
RcppExport SEXP _RationalMatrix_isSurjective_rcpp(SEXP MSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< CharMatrix >::type M(MSEXP);
    rcpp_result_gen = Rcpp::wrap(isSurjective_rcpp(M));
    return rcpp_result_gen;
END_RCPP
}
// isInvertible_rcpp
bool isInvertible_rcpp(CharMatrix M);
RcppExport SEXP _RationalMatrix_isInvertible_rcpp(SEXP MSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< CharMatrix >::type M(MSEXP);
    rcpp_result_gen = Rcpp::wrap(isInvertible_rcpp(M));
    return rcpp_result_gen;
END_RCPP
}
// inverse_rcpp
CharMatrix inverse_rcpp(CharMatrix M);
RcppExport SEXP _RationalMatrix_inverse_rcpp(SEXP MSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< CharMatrix >::type M(MSEXP);
    rcpp_result_gen = Rcpp::wrap(inverse_rcpp(M));
    return rcpp_result_gen;
END_RCPP
}
// kernel_rcpp
CharMatrix kernel_rcpp(CharMatrix M);
RcppExport SEXP _RationalMatrix_kernel_rcpp(SEXP MSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< CharMatrix >::type M(MSEXP);
    rcpp_result_gen = Rcpp::wrap(kernel_rcpp(M));
    return rcpp_result_gen;
END_RCPP
}
// rank_rcpp
unsigned rank_rcpp(CharMatrix M);
RcppExport SEXP _RationalMatrix_rank_rcpp(SEXP MSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< CharMatrix >::type M(MSEXP);
    rcpp_result_gen = Rcpp::wrap(rank_rcpp(M));
    return rcpp_result_gen;
END_RCPP
}
// UtDU_rcpp
Rcpp::List UtDU_rcpp(CharMatrix M);
RcppExport SEXP _RationalMatrix_UtDU_rcpp(SEXP MSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< CharMatrix >::type M(MSEXP);
    rcpp_result_gen = Rcpp::wrap(UtDU_rcpp(M));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_RationalMatrix_det_rcpp", (DL_FUNC) &_RationalMatrix_det_rcpp, 1},
    {"_RationalMatrix_image_rcpp", (DL_FUNC) &_RationalMatrix_image_rcpp, 1},
    {"_RationalMatrix_isInjective_rcpp", (DL_FUNC) &_RationalMatrix_isInjective_rcpp, 1},
    {"_RationalMatrix_isSurjective_rcpp", (DL_FUNC) &_RationalMatrix_isSurjective_rcpp, 1},
    {"_RationalMatrix_isInvertible_rcpp", (DL_FUNC) &_RationalMatrix_isInvertible_rcpp, 1},
    {"_RationalMatrix_inverse_rcpp", (DL_FUNC) &_RationalMatrix_inverse_rcpp, 1},
    {"_RationalMatrix_kernel_rcpp", (DL_FUNC) &_RationalMatrix_kernel_rcpp, 1},
    {"_RationalMatrix_rank_rcpp", (DL_FUNC) &_RationalMatrix_rank_rcpp, 1},
    {"_RationalMatrix_UtDU_rcpp", (DL_FUNC) &_RationalMatrix_UtDU_rcpp, 1},
    {NULL, NULL, 0}
};

RcppExport void R_init_RationalMatrix(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
